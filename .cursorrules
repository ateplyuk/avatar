# Project Rules and Patterns

## Code Organization
- Use FastAPI for all API endpoints
- Organize endpoints in separate router files
- Keep main application file clean and minimal
- Use in-memory storage for task status

## Development Patterns
- Follow RESTful API design principles
- Implement proper error handling
- Use async/await for API endpoints
- Maintain clear logging

## Project Preferences
- Prefer modular code organization
- Use type hints and Pydantic models
- Keep documentation up to date
- Follow Python best practices

## Known Challenges
- Memory-based storage limitations
- External service dependencies
- CORS configuration requirements
- Task status management complexity

## Tool Usage
- FastAPI for API development
- Uvicorn for server
- Pydantic for data validation
- Fal-client for image generation

## Evolution Notes
- Started with basic FastAPI setup
- Added router-based organization
- Implemented CORS middleware
- Integrated external services 